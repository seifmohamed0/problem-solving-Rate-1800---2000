#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef tree<pair<long long,int>, null_type, less<pair<long long,int>>, rb_tree_tag,
		tree_order_statistics_node_update> ordered_set;

vector<int>vi;
int n;
int sol(vector<int>&vv , int bit){
	if(bit <0 ||!vv.size())
		return 0;
	vector<int>l,r;
	for(auto &it : vv){
		if((it>>bit)&1)
			r.push_back(it);
		else l.push_back(it);
	}
	if(!r.size())
		return sol(l,bit-1);
	if(!l.size())
		return sol(r,bit-1);
	return min(sol(r,bit-1),sol(l,bit-1))+(1<<bit);
}
int main(){
	cin>>n;
	vi.resize(n);
	for(auto &it : vi)
		cin>>it;
	cout<<sol(vi , 30);
	return 0;
}
