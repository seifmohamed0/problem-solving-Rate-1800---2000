#include <bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/rope>
using namespace std;
//usin	g namespace __gnu_pbds;
//using namespace __gnu_cxx;
//template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

using namespace std;
#define go ios::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);
#define ll long long
const int mxn = 1e5 + 5 , mod = 1e9 + 7 , MOD = 1e9 + 7 , mod2 = 998244353;
int bit[66];
void bingo(){
	for(int i = 0; i <= 60 ; i++)
		bit[i] = 0;
	int n ;
	cin>>n;
	vector<ll>vi(n);
	for(int i = 0;i < n ; i++){
		cin>>vi[i];
		for(int j = 0;j <= 60 ; j++){
			bit[j] += vi[i] >> j & 1;
		}
	}
	ll out = 0;
	for(int i = 0; i < n ; i++){
		ll sor = 0 , sand = 0;
		for(int j = 0; j <= 60 ; j++){
			if(vi[i] >> j & 1 	){
				sor = (sor + ((1ll << j) %mod * n)%mod)%mod;
				sand = (sand + ((1ll << j) %mod *bit[j])%mod)%mod;
			}else{
				sor = (sor + ((1ll << j) %mod * bit[j])%mod)%mod;
			}
		}
		out = (out + (sor * sand)%mod)%mod;
	}
	cout<<out<<endl;
}
int main() {
	go
#ifdef LOCAL
	freopen("input.in", "rt", stdin);
//	freopen("output.in", "wt", stdout);
#endif
	int t = 1;
	cin>>t;
	while(t--){
		bingo();
	}
	return 0;
}
