#include <bits/stdc++.h> 
#define ll long long 
using namespace std;
const int  mxn = 1e5 + 5 , N = 8e1 + 5 , mod = 1e9 + 7;
void sfsf(){
	ios::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);
}

int ch[6][3] = {{0,1,2},{0,2,1},{1,0,2},{1,2,0},{2,0,1},{2,1,0}} , cost[mxn][3] , n;
vector<int>vi[mxn];
int in[mxn] , ans[mxn];
bool vis[mxn][6];
bitset<mxn>vis2;
int main(){
	//freopen("a.txt","rt" , stdin);
	//freopen("b.txt","w" , stdout);
	sfsf();
	cin>>n;
	for(int i = 0 ; i <3 ; i++){
		for(int j = 1; j <= n ; j++){
			cin>>cost[j][i];
		}
	}
	int ones = 0 , st = -1; 
	for(int i= 0 ;i < n - 1 ; i++){
		int u , v;
		cin>>u>>v;
		vi[u].push_back(v);
		vi[v].push_back(u);
		in[u]++;in[v]++;
		if(in[u] > 2)
			return cout<<-1,0;
	}
	for(int i= 1 ; i <= n ; i++){
		if(in[i] == 1){
			if(st == -1)
			st = i;
			ones++;
		}
	}
	if(ones != 2)return cout<<-1,0;
	long long mn = 1e15;
	int correct = -1;
	for(int j = 0; j < 6 ; j++){
		int curr = st , cnt = 0;
		long long sum = 0;
		while(!vis[curr][j]){
			vis[curr][j] = true;
			sum += cost[curr][ch[j][cnt]];
			cnt++;
			cnt %=3;
			for(auto it : vi[curr]){
				if(!vis[it][j]){
					curr = it;
				}
			}
		}
		if(mn > sum){
			mn = sum;
			correct = j;
		}
	}
	cout<<mn<<endl;
	int curr = st , cnt = 0;
	while(!vis2[curr]){
		vis2[curr] = true;
		ans[curr] = ch[correct][cnt];
		cnt++;cnt%=3;
		for(auto it : vi[curr]){
			if(!vis2[it]){
				curr = it;
			}
		}
	}
	for(int i = 1; i <= n ; i++)
		cout<<ans[i] + 1<<" ";
	return 0;
}
