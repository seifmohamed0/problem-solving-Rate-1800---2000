#include <bits/stdc++.h> 	
#define ll long long 
using namespace std;
void sfsf(){
	ios::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);
}
const int  mxn =2e5 + 	5 , N = 8e1 + 5 , mod = 1e9 + 7 , inf = 0x3f , mod2 = 999119999 , mod3 = 1000992299 , pow1 = 31 , pow2 = 53 ;
ll n , s;
vector<pair<int , int>>vi[mxn];
ll sum;
priority_queue<array<ll , 3>>pq;
map<int,int>cnt;
void dfs(int node , int par){
	cnt[node] = 0;
	for(auto it : vi[node]){
		if(it.first == par)continue;
		dfs(it.first , node);
		cnt[node] += cnt[it.first];
		ll num = (ll)cnt[it.first] * it.second - ((ll)cnt[it.first] * (it.second / 2));
		sum += (ll)cnt[it.first] * it.second;
		pq.push({num ,it.second , cnt[it.first]}); 
	}
	cnt[node] = max(cnt[node],1);
}
int main(){
	//freopen("a.txt","rt" , stdin);
	//freopen("b.txt","w" , stdout);
	sfsf();
	int t ;
	cin>>t;
	while(t--){
		sum = 0;
		while(!pq.empty())
			pq.pop();
		cin>>n>>s;
		for(int i = 1 ; i <= n ; i++){
			vi[i].clear();
		}
		for(int i = 0 ; i < n - 1  ; i++){
			int u , v , cost;
			cin>>u>>v>>cost;
			vi[u].push_back({v , cost});
			vi[v].push_back({u , cost});
		}
		dfs(1 , -1);
		int ans = 0;
		while(sum > s){
			array<ll,3>curr = pq.top();
			pq.pop();
			sum -= curr[0];
			curr[1]/=2;
			pq.push({(ll)(curr[1] * curr[2]) - (curr[1] / 2 * curr[2]) , curr[1] , curr[2]}) ;
			ans++;
		}
		cout<<ans<<endl;
	}
	return 0;
}
