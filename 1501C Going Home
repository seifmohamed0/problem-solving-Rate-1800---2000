#include <bits/stdc++.h>
#include <ext/numeric>

#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/rope>
using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;
template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

using namespace std;
#define go ios::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);
#define ll long long
typedef vector<vector<int>>vvi;
typedef complex<long double>Point;
const double Pi = acos(-1.0) , eps = 1e-8;
#define X real()
#define Y imag()
#define Angle(v) (atan2((v).Y , (v).X))
#define Length(v) ((long double)hypot((v).Y , (v).X))
#define Lengthsqr(v) (dot((v) , (v)))
const int mxn = 2e5+ 5 , mod = 1e9 + 7, MOD = 1e9 + 7 , mod2 = 998244353;
int I[5000006] , J[5000006] , arr[mxn] ,n;
void bingo(){
	cin>>n;
	for(int i = 1 ; i <= n ; i++)
		cin>>arr[i];
	for(int i = 1; i < n; i++){
		for(int j = i + 1 ;j <= n ; j++){
			int sum = arr[i] + arr[j];
			if(I[sum] && J[sum] && I[sum] != i && I[sum] != j && J[sum] != i && J[sum] != j){
				cout<<"YES\n"<<i<<" "<<j <<" "<<I[sum] <<" "<<J[sum] <<'\n';
				return;
			}
			I[sum] = i;
			J[sum] = j;
		}
	}
	cout<<"NO\n";
}
int main() {
	go
#ifdef LOCAL
	freopen("input.in", "rt", stdin);
//	freopen("output.out", "wt", stdout);
#endif
	//freopen("card.in", "rt", stdin);
	int t = 1;
	//cin>>t;
	while(t--){
		bingo();
	}
	return 0;
}
