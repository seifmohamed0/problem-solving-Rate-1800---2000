#include<bits/stdc++.h>
#include <stdio.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less_equal<int>, rb_tree_tag,
		tree_order_statistics_node_update> ordered_set;
typedef tree<int, null_type, less_equal<int>, rb_tree_tag,
		tree_order_statistics_node_update> indexed_multiset;
	
int main(){
	int t ; cin>>t;
	while(t--){
		map<long long,int>mp;
		long long a , m ;
		cin>>a>>m;
		long long gc = m / __gcd(a , m);
		for(long long i = 2 ; i * i <= gc ; i++){
			int cnt = 0;
			while(gc % i == 0){
				cnt++;
				gc/=i;
			}
			if(cnt)
				mp[i] = cnt; 
		}
	if(gc > 1 )mp[gc] = 1;
	long long ans = 1;
	for(auto it : mp){
		long long po = 1;
		for(int i = 0; i < it.second ; i++)
			po*=it.first;
		ans*=(po-(po/it.first));
	}
	cout<<ans<<endl;
	}
	return 0;
	
}
