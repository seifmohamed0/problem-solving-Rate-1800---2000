#include <bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/rope>
using namespace std;
//usin	g namespace __gnu_pbds;
//using namespace __gnu_cxx;
//template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

using namespace std;
#define go ios::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);
#define ll long long
const int mxn = 1e5 + 5 , mod = 1e9 + 7 , MOD = 1e9 + 7 , mod2 = 998244353;
int r , n;
vector<array<int,3>>vi;
int dp[mxn];
int solve(int idx){
	if(dp[idx] != -1)
		return dp[idx];
	int ret = 0;
	for(int i = idx + 1 ; i <= n; i++){
		if(idx + 2 < i && vi[i][0] - vi[idx][0] > 2021)break;
		if(abs(vi[idx][1] - vi[i][1]) + abs(vi[idx][2] - vi[i][2]) > vi[i][0] - vi[idx][0])
			continue;
		ret = max(ret , solve(i) + 1);
	}
	return dp[idx] = ret;
}
void bingo(){
	cin>>r>>n;
	vi.resize(n + 1);
	vi[0][0] = 0 , vi[0][1] = 1 , vi[0][2] = 1;
	for(int i = 1; i <= n ; i++){
		cin>>vi[i][0]>>vi[i][1]>>vi[i][2];
	}
	memset(dp , -1 ,sizeof(dp));
	cout<<solve(0);
}
int main() {
	go
#ifdef LOCAL
	freopen("input.in", "rt", stdin);
//	freopen("output.in", "wt", stdout);
#endif
	int t = 1;
	//cin>>t;
	while(t--){
		bingo();
	}
	return 0;
}
