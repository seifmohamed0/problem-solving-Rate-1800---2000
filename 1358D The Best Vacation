#include <bits/stdc++.h>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/rope>
using namespace std;
//usin	g namespace __gnu_pbds;
//using namespace __gnu_cxx;
//template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

using namespace std;
#define go ios::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);
#define ll long long
const int mxn = 4e5 + 5 , mod = 1e9 + 7 , MOD = 1e9 + 7 , mod2 = 998244353;
ll d[mxn] , sum , p;
void bingo(){
	ll n, x;
	cin>>n>>x;
	for (int i = 1; i <= n; i++){
		cin>>d[i];
		d[i + n] = d[i];
	}
	ll out = 0 ;
	int l = 1, r = 0;
	while (r <= 2 * n){
		sum += d[++r];
		p += d[r] * (d[r] + 1) / 2;
		while(sum - d[l] >= x){
			p -= d[l] * (d[l] + 1) / 2;
			sum -= d[l++];
		}
		if (sum >= x){
			ll diff = sum - x;
			out = max(out, p - diff * (diff + 1) / 2);
		}
	}
	cout<<out;
}
int main() {
	go
#ifdef LOCAL
	freopen("input.in", "rt", stdin);
//	freopen("output.in", "wt", stdout);
#endif
	int t = 1;
	//cin>>t;
	while(t--){
		bingo();
	}
	return 0;
}
